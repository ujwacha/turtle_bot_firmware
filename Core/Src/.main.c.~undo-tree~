(undo-tree-save-format-version . 1)
"248ec8145f0f902414c837904da4ea09e78fc4e7"
[nil nil nil nil (26175 41861 700744 394000) 0 nil]
([nil nil ((3070 . 3074) (#("    " 0 4 (fontified nil)) . 3069) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (3069 . 3074) (#("    " 0 4 (fontified nil)) . 3068) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (3072 . 3073) (3068 . 3072) (#("   " 0 3 (fontified nil)) . -3068) (undo-tree-id260 . -3) (undo-tree-id261 . -3) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (undo-tree-id264 . -3) (undo-tree-id265 . -3) (undo-tree-id266 . -3) (undo-tree-id267 . -3) (undo-tree-id268 . -3) (undo-tree-id269 . -3) (undo-tree-id270 . -3) (undo-tree-id271 . -3) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (#(" " 0 1 (fontified t)) . 3071) (t 26175 41611 279000 0)) nil (26175 41861 700732 372000) 0 nil])
([nil nil ((apply -12 3019 3081 undo--wrap-and-run-primitive-undo 3019 3081 ((3071 . 3074) (3051 . 3054) (3043 . 3046) (3023 . 3026) 3019))) nil (26175 41861 700582 48000) 0 nil])
([nil nil ((3102 . 3107) (3099 . 3102) (3098 . 3099) (3095 . 3098) (#("-" 0 1 (fontified t)) . -3095) (undo-tree-id190 . -1) (#(" " 0 1 (fontified t)) . -3096) (undo-tree-id191 . -1) (#("0" 0 1 (fontified t)) . -3097) (undo-tree-id192 . -1) (#(" " 0 1 (fontified t)) . -3098) (undo-tree-id193 . -1) 3099 (3089 . 3099) (3088 . 3090) (3084 . 3088) (3080 . 3084)) nil (26175 41861 700578 127000) 0 nil])
([nil nil ((3108 . 3112) (3107 . 3108)) nil (26175 41861 700565 703000) 0 nil])
([nil nil ((apply 12 3022 3067 undo--wrap-and-run-primitive-undo 3022 3067 ((#(" */" 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 3062) (#<marker at 3175 in main.c<turtle_bot>> . -2) (#<marker at 3175 in main.c<turtle_bot>> . -2) (#<marker at 3175 in main.c<turtle_bot>> . -2) (#<marker at 3175 in main.c<turtle_bot>> . -2) (#<marker at 3175 in main.c<turtle_bot>> . -2) (#<marker at 3175 in main.c<turtle_bot>> . -2) (#<marker at 3175 in main.c<turtle_bot>> . -2) (#("/* " 0 1 (fontified t face font-lock-comment-delimiter-face c-is-sws t c-in-sws t) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -3045) (#(" */" 0 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . 3040) (#("/* " 0 1 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 1 3 (c-in-sws t fontified t face font-lock-comment-delimiter-face)) . -3023) 3022))) nil (26175 41861 700563 506000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3065) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) 3069 (3065 . 3069) (#("    " 0 4 (fontified nil)) . 3064) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (3064 . 3069) (#("    " 0 4 (fontified nil)) . 3063) (undo-tree-id184 . -3) (undo-tree-id185 . -4) (undo-tree-id186 . -3) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (3067 . 3068)) nil (26175 41861 700553 499000) 0 nil])
([nil nil ((3106 . 3109) (#("uint32_t Delay" 0 8 (fontified nil face font-lock-type-face) 8 9 (fontified nil) 9 14 (fontified nil face font-lock-variable-name-face)) . 3106) (undo-tree-id104 . -14) (3105 . 3106) (777 . 804) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3105 3109 nil nil nil t nil)) nil 3 nil #s(yas--field 1 3105 3109 nil nil nil t nil) nil nil)) (3068 . 3093) (#("HAL_Delay(${1:uint32_t Delay})" 0 30 (fontified nil)) . 3068) (3068 . 3098) (#("HAL_D" 0 5 (fontified nil)) . 3068) (3068 . 3073) (#("HAL_Delay(uint32_t Delay)" 0 25 (fontified nil)) . -3068) (3068 . 3093) (#("HAL_Del" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -3068) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) 3075 (3073 . 3075) (3068 . 3073) (3064 . 3068)) nil (26175 41861 700407 8000) 0 nil])
([nil nil ((3110 . 3111) (apply yas--snippet-revive 3095 3110 #s(yas--snippet nil (#s(yas--field 1 3105 3109 nil nil nil t nil)) nil 3 nil #s(yas--field 1 3105 3109 nil nil nil t nil) nil nil))) nil (26175 41861 700392 663000) 0 nil])
([nil nil ((3149 . 3155) (3148 . 3154) (3147 . 3149) (3146 . 3147)) nil (26175 41861 700390 244000) 0 nil])
([nil nil ((3170 . 3171) (#("l" 0 1 (fontified t)) . -3170) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 3171 (3165 . 3171) (3161 . 3165) (#("CCR1" 0 4 (fontified nil)) . -3161) (3161 . 3165) (#("CCR" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -3161) (undo-tree-id96 . -2) (undo-tree-id97 . -3) (undo-tree-id98 . -3) 3164 (3159 . 3164) (#("0" 0 1 (fontified t)) . -3159) (undo-tree-id99 . -1) (#("-" 0 1 (fontified t)) . -3160) (undo-tree-id100 . -1) 3161 (3159 . 3161) (3155 . 3159) (#("TIM" 0 3 (fontified nil)) . 3155) (3155 . 3158) (#("TIM2" 0 4 (fontified nil)) . -3155) (3155 . 3159) (#("TIM" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -3155) (undo-tree-id101 . -3) (undo-tree-id102 . -3) 3158 (3155 . 3158) (3149 . 3155) (#("     " 0 5 (fontified nil)) . -3149) (undo-tree-id103 . -5) (#(" " 0 1 (fontified t)) . 3154)) nil (26175 41861 700380 415000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . 3166) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1)) nil (26175 41861 700180 64000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3176 . 3177) (#("
" 0 1 (fontified nil)) . -3192) (3170 . 3193) 3166) nil (26175 41861 700170 871000) 0 nil])
([nil nil ((3186 . 3187) (#("1" 0 1 (fontified t)) . 3186) (undo-tree-id87 . -1)) nil (26175 41861 700166 210000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -3194) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (undo-tree-id80 . -6) (undo-tree-id81 . -6) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) 3200 (3194 . 3200) (#("      " 0 6 (fontified nil)) . 3193) (undo-tree-id86 . -6) (3192 . 3200)) nil (26175 41861 700159 540000) 0 nil])
([nil nil ((#("uint32_t Delay" 0 8 (fontified nil face font-lock-type-face) 8 9 (fontified nil) 9 14 (fontified nil face font-lock-variable-name-face)) . 3211) (undo-tree-id0 . -14) (undo-tree-id1 . -8) (3210 . 3211) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3210 3211 nil nil nil t nil)) nil 4 nil #s(yas--field 1 3210 3211 nil nil nil t nil) nil nil)) (3200 . 3225) (#("HAL_Delay(${1:uint32_t Delay})" 0 30 (fontified nil)) . 3200) (3200 . 3230) (#("HAL_D" 0 5 (fontified nil)) . 3200) (3200 . 3205) (#("HAL_Delay(uint32_t Delay)" 0 25 (fontified nil)) . -3200) (3200 . 3225) (#("HAL_D" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -3200) (undo-tree-id2 . -5) (undo-tree-id3 . -5) (undo-tree-id4 . -5) (undo-tree-id5 . -5) (undo-tree-id6 . -5) (undo-tree-id7 . -5) (undo-tree-id8 . -5) (undo-tree-id9 . -5) (undo-tree-id10 . -5) (undo-tree-id11 . -5) (undo-tree-id12 . -5) (undo-tree-id13 . -5) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -5) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -5) (undo-tree-id24 . -5) (undo-tree-id25 . -5) (undo-tree-id26 . -5) (undo-tree-id27 . -5) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (undo-tree-id30 . -5) (undo-tree-id31 . -5) (undo-tree-id32 . -5) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -5) (undo-tree-id38 . -5) (undo-tree-id39 . -5) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -5) (undo-tree-id44 . -5) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -5) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (undo-tree-id70 . -5) (undo-tree-id71 . -5) (undo-tree-id72 . -5) (undo-tree-id73 . -5) (undo-tree-id74 . -5) 3205 (3200 . 3205) (3194 . 3200)) nil (26175 41861 700122 452000) 0 nil])
([nil nil ((3212 . 3213) (apply yas--snippet-revive 3200 3212 #s(yas--snippet nil (#s(yas--field 1 3210 3211 nil nil nil t nil)) nil 4 nil #s(yas--field 1 3210 3211 nil nil nil t nil) nil nil))) nil (26175 41861 699826 190000) 0 nil])
([nil nil ((3045 . 3046) (t 26175 41861 738029 969000)) nil (26176 26433 717078 553000) 0 nil])
([nil current ((3130 . 3131) (apply yas--snippet-revive 3081 3130 #s(yas--snippet nil (#s(yas--field 1 3103 3109 nil nil nil t #s(yas--field 2 3111 3124 nil nil nil t #s(yas--field 3 3126 3129 nil nil nil t nil))) #s(yas--field 2 3111 3124 nil nil nil t #s(yas--field 3 3126 3129 nil nil nil t nil)) #s(yas--field 3 3126 3129 nil nil nil t nil)) nil 5 nil #s(yas--field 3 3126 3129 nil nil nil t nil) nil nil)) (3127 . 3129) (#("__COMPARE__" 0 11 (fontified nil)) . 3127) (3126 . 3127) (3111 . 3124) (#("TIM_C" 0 5 (fontified nil)) . 3111) (3111 . 3116) (#("TIM_CHANNEL_4" 0 13 (fontified nil)) . -3111) (3111 . 3124) (#("TIM_CHA" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . -3111) (undo-tree-id278 . -7) (undo-tree-id279 . -7) 3118 (3113 . 3118) (3111 . 3113) (#("t" 0 1 (fontified t)) . -3111) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) 3112 (#("I" 0 1 (fontified t)) . -3112) (undo-tree-id283 . -1) (undo-tree-id284 . -1) 3113 (3112 . 3113) (#("__CHANNEL__" 0 11 (fontified nil)) . 3112) (3111 . 3112) (3104 . 3109) (#("h" 0 1 (fontified nil)) . 3104) (3104 . 3105) (#("htim2" 0 5 (fontified nil)) . -3104) (3104 . 3109) (#("h" 0 1 (fontified t)) . -3104) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 3105 (3104 . 3105) (#("__HANDLE__" 0 10 (fontified nil)) . 3104) (3103 . 3104) (804 . 835) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 3103 3109 nil nil nil t #s(yas--field 2 3111 3124 nil nil nil t #s(yas--field 3 3126 3129 nil nil nil t nil))) #s(yas--field 2 3111 3124 nil nil nil t #s(yas--field 3 3126 3129 nil nil nil t nil)) #s(yas--field 3 3126 3129 nil nil nil t nil)) nil 5 nil #s(yas--field 3 3126 3129 nil nil nil t nil) nil nil)) (3050 . 3109) (#("__HAL_TIM_SET_COMPARE(${1:__HANDLE__}, ${2:__CHANNEL__}, ${3:__COMPARE__})" 0 74 (fontified nil)) . 3050) (3050 . 3124) (#("__HAL_T" 0 7 (fontified nil)) . 3050) (3050 . 3057) (#("__HAL_TIM_SET_COMPARE(__HANDLE__, __CHANNEL__, __COMPARE__)" 0 59 (fontified nil)) . -3050) (3050 . 3109) (#("__HAL_TIM_SET_C" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t face font-lock-type-face) 10 11 (fontified t face font-lock-type-face) 11 12 (fontified t face font-lock-type-face) 12 13 (fontified t face font-lock-type-face) 13 14 (fontified t face font-lock-type-face) 14 15 (fontified t c-type c-decl-id-start face font-lock-type-face)) . -3050) (undo-tree-id287 . -14) (undo-tree-id288 . -15) (undo-tree-id289 . -15) 3065 (3064 . 3065) (3050 . 3064) (3046 . 3050)) nil (26176 26433 717063 133000) 0 nil])
nil
